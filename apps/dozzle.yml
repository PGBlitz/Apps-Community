#!/bin/bash
#
# Title:      Dozzle
# Author(s):  Amir Raminfar (amir20)
# URL:        https://dozzle.dev/ - https://github.com/amir20/dozzle
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # CORE (MANDATORY) DO NOT CHANGE ###########################################

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'dozzle'
        intport: '8080'
        extport: '8383'
        image: 'amir20/dozzle'

    - name: 'Including cron job'
      include_tasks: '/opt/communityapps/apps/_core.yml'

    # LABELS #### KEEPS BOTTOM CLEAN ###########################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.frontend.auth.forward.address: '{{gauth}}'
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}{{tldset}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/var/run/docker.sock:/var/run/docker.sock'
          - '/etc/localtime:/etc/localtime:ro'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          DOZZLE_ADDR: ':8080'
          DOZZLE_BASE: '/'
          DOZZLE_LEVEL: 'info'
          DOZZLE_TAILSIZE: '300'

    # MAIN SCRIPT ##############################################################

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{ports.stdout}}{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: plexguide
            aliases:
              - '{{pgrole}}'
        state: started
        labels: '{{pg_labels}}'
